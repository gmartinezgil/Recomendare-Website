CREATE TABLE CONSTANT (
       ID INTEGER NOT NULL
     , KEY_NAME CHAR(20)
     , KEY_VALUE CHAR(20)
     , CODE CHAR(10)
     , PRIMARY KEY (ID)
);

CREATE TABLE USER_PROFILE (
       ID INTEGER NOT NULL
     , NAME CHAR(15)
     , PRIMARY KEY (ID)
);

CREATE TABLE CATEGORY (
       ID INTEGER NOT NULL
     , TYPE_ID INTEGER
     , PRIMARY KEY (ID)
);

CREATE TABLE USER_GROUP (
       ID INTEGER NOT NULL
     , NAME CHAR(50)
     , PRIMARY KEY (ID)
);

CREATE TABLE USER_SESSION (
       ID INTEGER NOT NULL
     , LOGIN CHAR(20)
     , PASSWORD CHAR(30)
     , PRIMARY KEY (ID)
);

CREATE TABLE LANGUAGE (
       ID INTEGER NOT NULL
     , CODE CHAR(2)
     , NAME CHAR(20)
     , CHARACTER_SET CHAR(7)
     , PRIMARY KEY (ID)
);

CREATE TABLE CURRENCY (
       ID INTEGER NOT NULL
     , CODE CHAR(3)
     , SYMBOL CHAR(1)
     , CONVERSION_RATE FLOAT
     , PRIMARY KEY (ID)
);

CREATE TABLE CELL_CARRIER (
       ID INTEGER NOT NULL
     , MNC CHAR(2)
     , NAME CHAR(20)
     , PRIMARY KEY (ID)
);

CREATE TABLE CLIENT_BROWSER_STATISTIC (
       ID INTEGER NOT NULL
     , IP_ADDRESS CHAR(15)
     , DNS_REVERSE_NAME CHAR(100)
     , BROWSER_NAME CHAR(30)
     , BROWSER_VERSION CHAR(30)
     , BROWSER_PLATFORM CHAR(10)
     , HTTP_REFERER CHAR(100)
     , PRIMARY KEY (ID)
);

CREATE TABLE LOCATION (
       ID INTEGER NOT NULL
     , LATITUDE FLOAT
     , LONGITUDE FLOAT
     , PRIMARY KEY (ID)
);

CREATE TABLE COUNTRY (
       ID INTEGER NOT NULL
     , LOCATION_ID INTEGER
     , SPOKEN_LANGUAGE_ID INTEGER
     , CURRENCY_USED_ID INTEGER
     , CODE CHAR(2)
     , MCC CHAR(3)
     , BY_SERVICE_NAME CHAR(20)
     , IS_SUPPORTED BIT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_COUNTRY_1 FOREIGN KEY (LOCATION_ID)
                  REFERENCES LOCATION (ID)
     , CONSTRAINT FK_COUNTRY_2 FOREIGN KEY (SPOKEN_LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
     , CONSTRAINT FK_COUNTRY_3 FOREIGN KEY (CURRENCY_USED_ID)
                  REFERENCES CURRENCY (ID)
);

CREATE TABLE CITY (
       ID INTEGER NOT NULL
     , COUNTRY_ID INTEGER
     , LOCATION_ID INTEGER
     , TIMEZONE CHAR(30)
     , BY_SERVICE_NAME CHAR(30)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CITY_2 FOREIGN KEY (LOCATION_ID)
                  REFERENCES LOCATION (ID)
     , CONSTRAINT FK_CITY_3 FOREIGN KEY (COUNTRY_ID)
                  REFERENCES COUNTRY (ID)
);

CREATE TABLE ZONE (
       ID INTEGER NOT NULL
     , CITY_ID INTEGER
     , NAME CHAR(30)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ZONE_2 FOREIGN KEY (CITY_ID)
                  REFERENCES CITY (ID)
);

CREATE TABLE STREET (
       ID INTEGER NOT NULL
     , ZONE_ID INTEGER
     , NAME CHAR(30)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_STREET_1 FOREIGN KEY (ZONE_ID)
                  REFERENCES ZONE (ID)
);


CREATE TABLE ITEM_PRICE (
       ID INTEGER NOT NULL
     , CURRENCY_ID INTEGER
     , VALUE NUMERIC(10,2)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_PRICE_1 FOREIGN KEY (CURRENCY_ID)
                  REFERENCES CURRENCY (ID)
);

CREATE TABLE PERSON (
       ID INTEGER NOT NULL
     , GENDER_ID INTEGER
     , NAME CHAR(30)
     , FIRSTNAME CHAR(30)
     , LASTNAME CHAR(30)
     , BIRTH_DAY SMALLINT
     , BIRTH_MONTH SMALLINT
     , BIRTH_YEAR SMALLINT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_PERSON_1 FOREIGN KEY (GENDER_ID)
                  REFERENCES CONSTANT (ID)
);

CREATE TABLE PICTURE (
       ID INTEGER NOT NULL
     , TYPE_ID INTEGER
     , EXTENSION_ID INTEGER
     , CONTENT BYTEA
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_PICTURE_1 FOREIGN KEY (TYPE_ID)
                  REFERENCES CONSTANT (ID)
     , CONSTRAINT FK_PICTURE_2 FOREIGN KEY (EXTENSION_ID)
                  REFERENCES CONSTANT (ID)
);


CREATE TABLE USER_CONFIGURATION (
       ID INTEGER NOT NULL
     , LANGUAGE_ID INTEGER
     , CITY_ID INTEGER
     , AVATAR_PICTURE_ID INTEGER
     , SCREEN_NAME CHAR(30)
     , IS_ACTIVE BIT
     , CONFIRMATION_KEY CHAR(10)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CONFIGURATION_2 FOREIGN KEY (CITY_ID)
                  REFERENCES CITY (ID)
     , CONSTRAINT FK_CONFIGURATION_3 FOREIGN KEY (AVATAR_PICTURE_ID)
                  REFERENCES PICTURE (ID)
     , CONSTRAINT FK_USER_CONFIGURATION_4 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE ITEM_LOCATION (
       ID INTEGER NOT NULL
     , LOCATION_ID INTEGER
     , STREET_ID INTEGER
     , STREET_OUTSIDE_NUMBER CHAR(5)
     , STREET_INSIDE_NUMBER CHAR(5)
     , LOCATION_NAME CHAR(30)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_BUILDING_1 FOREIGN KEY (LOCATION_ID)
                  REFERENCES LOCATION (ID)
     , CONSTRAINT FK_BUILDING_11 FOREIGN KEY (STREET_ID)
                  REFERENCES STREET (ID)
);

CREATE TABLE SUBCATEGORY (
       ID INTEGER NOT NULL
     , CATEGORY_ID INTEGER
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_SUBCATEGORY_1 FOREIGN KEY (CATEGORY_ID)
                  REFERENCES CATEGORY (ID)
);

CREATE TABLE CONTACT (
       ID INTEGER NOT NULL
     , PERSON_ID INTEGER
     , LOGO_PICTURE_ID INTEGER
     , WORK_PHONE_NUMBER CHAR(20)
     , MOBILE_PHONE_NUMBER CHAR(20)
     , HOME_PHONE_NUMBER CHAR(20)
     , SKYPE_CONTACT CHAR(20)
     , EMAIL_ADDRESS CHAR(50)
     , IM_ADDRESS CHAR(50)
     , HOMEPAGE_ADDRESS CHAR(100)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CONTACT_2 FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID)
     , CONSTRAINT FK_CONTACT_4 FOREIGN KEY (LOGO_PICTURE_ID)
                  REFERENCES PICTURE (ID)
);


CREATE TABLE USER_ (
       ID INTEGER NOT NULL
     , PERSON_ID INTEGER
     , USER_PROFILE_ID INTEGER
     , USER_CONFIGURATION_ID INTEGER
     , USER_SESSION_ID INTEGER
     , USER_GROUP_ID INTEGER
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_USER_1 FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID)
     , CONSTRAINT FK_USER_2 FOREIGN KEY (USER_PROFILE_ID)
                  REFERENCES USER_PROFILE (ID)
     , CONSTRAINT FK_USER_3 FOREIGN KEY (USER_CONFIGURATION_ID)
                  REFERENCES USER_CONFIGURATION (ID)
     , CONSTRAINT FK_USER_4 FOREIGN KEY (USER_SESSION_ID)
                  REFERENCES USER_SESSION (ID)
     , CONSTRAINT FK_USER_5 FOREIGN KEY (USER_GROUP_ID)
                  REFERENCES USER_GROUP (ID)
);

CREATE TABLE ITEM_CONTACT (
       ID INTEGER NOT NULL
     , CONTACT_ID INTEGER
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_CONTACT_1 FOREIGN KEY (CONTACT_ID)
                  REFERENCES CONTACT (ID)
);

CREATE TABLE ITEM_SUBMITTED_BY (
       ID INTEGER NOT NULL
     , USER_ID INTEGER
     , ON_DATE TIMESTAMP
     , RATING SMALLINT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_SUBMITTED_BY_1 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
);

CREATE TABLE BANNER (
       ID INTEGER NOT NULL
     , PROVIDER_ID INTEGER
     , USER_ID INTEGER
     , NAME CHAR(20)
     , URL_ADDRESS CHAR(100)
     , PICTURE_ID INTEGER
     , CONVERSION_RATE SMALLINT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_BANNER_1 FOREIGN KEY (PICTURE_ID)
                  REFERENCES PICTURE (ID)
     , CONSTRAINT FK_BANNER_2 FOREIGN KEY (PROVIDER_ID)
                  REFERENCES CONSTANT (ID)
     , CONSTRAINT FK_BANNER_3 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
);

CREATE TABLE ITEM (
       ID INTEGER NOT NULL
     , SUBCATEGORY_ID INTEGER
     , ITEM_SUBMITTED_BY_ID INTEGER
     , ITEM_CONTACT_ID INTEGER
     , ITEM_LOCATION_ID INTEGER
     , MIN_PRICE_ID INTEGER
     , MAX_PRICE_ID INTEGER
     , NAME CHAR(100)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_1 FOREIGN KEY (SUBCATEGORY_ID)
                  REFERENCES SUBCATEGORY (ID)
     , CONSTRAINT FK_ITEM_2 FOREIGN KEY (MIN_PRICE_ID)
                  REFERENCES ITEM_PRICE (ID)
     , CONSTRAINT FK_ITEM_4 FOREIGN KEY (MAX_PRICE_ID)
                  REFERENCES ITEM_PRICE (ID)
     , CONSTRAINT FK_ITEM_5 FOREIGN KEY (ITEM_CONTACT_ID)
                  REFERENCES ITEM_CONTACT (ID)
     , CONSTRAINT FK_ITEM_6 FOREIGN KEY (ITEM_LOCATION_ID)
                  REFERENCES ITEM_LOCATION (ID)
     , CONSTRAINT FK_ITEM_7 FOREIGN KEY (ITEM_SUBMITTED_BY_ID)
                  REFERENCES ITEM_SUBMITTED_BY (ID)
);

CREATE TABLE USER_FAVORITE (
       ID INTEGER NOT NULL
     , USER_ID INTEGER
     , ITEM_ID INTEGER
     , CREATED_ON TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_FAVORITES_3 FOREIGN KEY (ITEM_ID)
                  REFERENCES ITEM (ID)
     , CONSTRAINT FK_ITEM_FAVORITE_2 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
);


CREATE TABLE EVENT (
       ID INTEGER NOT NULL
     , TYPE_ID INTEGER
     , USER_ID INTEGER
     , ON_DATE TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_EVENT_1 FOREIGN KEY (TYPE_ID)
                  REFERENCES CONSTANT (ID)
     , CONSTRAINT FK_EVENT_2 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
);

CREATE TABLE REQUEST (
       ID INTEGER NOT NULL
     , TYPE_ID INTEGER
     , TO_USER_ID INTEGER
     , FROM_USER_ID INTEGER
     , STATUS_ID INTEGER
     , ON_DATE TIMESTAMP
     , IS_CLOSED BIT
     , CLOSED_ON_DATE TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_REQUEST_1 FOREIGN KEY (TYPE_ID)
                  REFERENCES CONSTANT (ID)
     , CONSTRAINT FK_REQUEST_2 FOREIGN KEY (TO_USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_REQUEST_3 FOREIGN KEY (FROM_USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_REQUEST_4 FOREIGN KEY (STATUS_ID)
                  REFERENCES CONSTANT (ID)
);

CREATE TABLE ITEM_COMMENT (
       ID INTEGER NOT NULL
     , ITEM_ID INTEGER
     , USER_ID INTEGER
     , CALIFICATION SMALLINT
     , ON_DATE TIMESTAMP
     , RATED_FAVORABLY SMALLINT
     , RATED_NOT_FAVORABLY SMALLINT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_RATING_1 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_RATING_3 FOREIGN KEY (ITEM_ID)
                  REFERENCES ITEM (ID)
);

CREATE TABLE SEARCH_STATISTIC (
       ID INTEGER NOT NULL
     , USER_ID INTEGER
     , LOCATION_ID INTEGER
     , CLIENT_BROWSER_STATISTIC_ID INTEGER
     , SESSION_ID CHAR(32)
     , KEYTERM CHAR(100)
     , ON_PAGE CHAR(50)
     , ON_DATE TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_SEARCH_STATISTICS_1 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_SEARCH_STATISTIC_2 FOREIGN KEY (LOCATION_ID)
                  REFERENCES LOCATION (ID)
     , CONSTRAINT FK_SEARCH_STATISTIC_3 FOREIGN KEY (CLIENT_BROWSER_STATISTIC_ID)
                  REFERENCES CLIENT_BROWSER_STATISTIC (ID)
);

CREATE TABLE BANNER_STATISTIC (
       ID INTEGER NOT NULL
     , USER_ID INTEGER
     , LOCATION_ID INTEGER
     , CLIENT_BROWSER_STATISTIC_ID INTEGER
     , BANNER_ID INTEGER
     , SESSION_ID CHAR(32)
     , ON_PAGE CHAR(50)
     , ON_DATE TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_BANNER_STATISTICS_1 FOREIGN KEY (BANNER_ID)
                  REFERENCES BANNER (ID)
     , CONSTRAINT FK_BANNER_STATISTICS_2 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_BANNER_STATISTIC_3 FOREIGN KEY (CLIENT_BROWSER_STATISTIC_ID)
                  REFERENCES CLIENT_BROWSER_STATISTIC (ID)
);

CREATE TABLE ITEM_ATTRIBUTE (
       ID INTEGER NOT NULL
     , ITEM_ID INTEGER
     , ATTRIBUTE_ID INTEGER
     , VALUE CHAR(20)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_ATTRIBUTE_1 FOREIGN KEY (ITEM_ID)
                  REFERENCES ITEM (ID)
     , CONSTRAINT FK_ITEM_ATTRIBUTE_2 FOREIGN KEY (ATTRIBUTE_ID)
                  REFERENCES CONSTANT (ID)
);

CREATE TABLE USER_FRIEND (
       ID INTEGER NOT NULL
     , USER_ID INTEGER
     , TYPE_ID INTEGER
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_FRIEND_1 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_FRIEND_2 FOREIGN KEY (TYPE_ID)
                  REFERENCES CONSTANT (ID)
);

CREATE TABLE CLICKSTREAM_STATISTIC (
       ID INTEGER NOT NULL
     , USER_ID INTEGER
     , LOCATION_ID INTEGER
     , CLIENT_BROWSER_STATISTIC_ID INTEGER
     , SESSION_ID CHAR(32)
     , ON_LINK CHAR(50)
     , ON_PAGE CHAR(50)
     , ON_DATE TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CLICKSTREAM_STATISTIC_1 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_CLICKSTREAM_STATISTIC_3 FOREIGN KEY (LOCATION_ID)
                  REFERENCES LOCATION (ID)
     , CONSTRAINT FK_CLICKSTREAM_STATISTIC_4 FOREIGN KEY (CLIENT_BROWSER_STATISTIC_ID)
                  REFERENCES CLIENT_BROWSER_STATISTIC (ID)
);

CREATE TABLE RECOMMENDER_DIFF (
       ID INTEGER NOT NULL
     , ITEM_ID_A INTEGER
     , ITEM_ID_B INTEGER
     , AVERAGE_DIFF FLOAT
     , COUNT SMALLINT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_RECOMMENDER_DIFF_1 FOREIGN KEY (ITEM_ID_A)
                  REFERENCES ITEM (ID)
     , CONSTRAINT FK_RECOMMENDER_DIFF_2 FOREIGN KEY (ITEM_ID_B)
                  REFERENCES ITEM (ID)
);

CREATE TABLE ITEM_COMMENT_TEXT (
       ID INTEGER NOT NULL
     , ITEM_COMMENT_ID INTEGER
     , LANGUAGE_ID INTEGER
     , COMMENTS VARCHAR(400)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_RATING_COMMENT_1 FOREIGN KEY (ITEM_COMMENT_ID)
                  REFERENCES ITEM_COMMENT (ID)
     , CONSTRAINT FK_ITEM_RATING_COMMENT_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE ITEM_RESUME (
       ID INTEGER NOT NULL
     , ITEM_ID INTEGER
     , LANGUAGE_ID INTEGER
     , RESUME VARCHAR(400)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_RESUME_1 FOREIGN KEY (ITEM_ID)
                  REFERENCES ITEM (ID)
     , CONSTRAINT FK_ITEM_RESUME_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE CATEGORY_DESCRIPTION (
       ID INTEGER NOT NULL
     , CATEGORY_ID INTEGER
     , LANGUAGE_ID INTEGER
     , NAME CHAR(100)
     , DESCRIPTION CHAR(200)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CATEGORY_NAME_1 FOREIGN KEY (CATEGORY_ID)
                  REFERENCES CATEGORY (ID)
     , CONSTRAINT FK_CATEGORY_DESCRIPTION_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE SUBCATEGORY_DESCRIPTION (
       ID INTEGER NOT NULL
     , SUBCATEGORY_ID INTEGER
     , LANGUAGE_ID INTEGER
     , NAME CHAR(100)
     , DESCRIPTION CHAR(200)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_SUBCATEGORY_NAME_1 FOREIGN KEY (SUBCATEGORY_ID)
                  REFERENCES SUBCATEGORY (ID)
     , CONSTRAINT FK_SUBCATEGORY_DESCRIPTION_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE PICTURE_COMMENT (
       ID INTEGER NOT NULL
     , PICTURE_ID INTEGER
     , LANGUAGE_ID INTEGER
     , COMMENTS VARCHAR(200)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_PICTURE_COMMENT_1 FOREIGN KEY (PICTURE_ID)
                  REFERENCES PICTURE (ID)
     , CONSTRAINT FK_PICTURE_COMMENT_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE USER_FAVORITE_COMMENT (
       ID INTEGER NOT NULL
     , FAVORITE_ID INTEGER
     , LANGUAGE_ID INTEGER
     , COMMENTS CHAR(100)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_FAVORITE_COMMENT_1 FOREIGN KEY (FAVORITE_ID)
                  REFERENCES USER_FAVORITE (ID)
     , CONSTRAINT FK_FAVORITE_COMMENT_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE EVENT_DESCRIPTION (
       ID INTEGER NOT NULL
     , EVENT_ID INTEGER
     , LANGUAGE_ID INTEGER
     , NAME CHAR(20)
     , DESCRIPTION CHAR(200)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_EVENT_DESCRIPTION_1 FOREIGN KEY (EVENT_ID)
                  REFERENCES EVENT (ID)
     , CONSTRAINT FK_EVENT_DESCRIPTION_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE REQUEST_COMMENT (
       ID INTEGER NOT NULL
     , REQUEST_ID INTEGER
     , LANGUAGE_ID INTEGER
     , COMMENTS CHAR(200)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_REQUEST_COMMENT_1 FOREIGN KEY (REQUEST_ID)
                  REFERENCES REQUEST (ID)
     , CONSTRAINT FK_REQUEST_COMMENT_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE LABEL (
       ID INTEGER NOT NULL
     , LANGUAGE_ID INTEGER
     , NAME CHAR(30)
     , VALUE CHAR(100)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_LABEL_1 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE CURRENCY_NAME (
       ID INTEGER NOT NULL
     , CURRENCY_ID INTEGER
     , LANGUAGE_ID INTEGER
     , NAME CHAR(30)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CURRENCY_NAME_1 FOREIGN KEY (CURRENCY_ID)
                  REFERENCES CURRENCY (ID)
     , CONSTRAINT FK_CURRENCY_NAME_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE COUNTRY_NAME (
       ID INTEGER NOT NULL
     , COUNTRY_ID INTEGER
     , LANGUAGE_ID INTEGER
     , NAME CHAR(30)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_COUNTRY_NAME_1 FOREIGN KEY (COUNTRY_ID)
                  REFERENCES COUNTRY (ID)
     , CONSTRAINT FK_COUNTRY_NAME_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE CITY_NAME (
       ID INTEGER NOT NULL
     , CITY_ID INTEGER
     , LANGUAGE_ID INTEGER
     , NAME CHAR(30)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CITY_NAME_1 FOREIGN KEY (CITY_ID)
                  REFERENCES CITY (ID)
     , CONSTRAINT FK_CITY_NAME_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE CELL_TOWER (
       ID INTEGER NOT NULL
     , CELL_CARRIER_ID INTEGER
     , LOCATION_ID INTEGER
     , RANGE SMALLINT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CELL_TOWER_1 FOREIGN KEY (CELL_CARRIER_ID)
                  REFERENCES CELL_CARRIER (ID)
     , CONSTRAINT FK_CELL_TOWER_2 FOREIGN KEY (LOCATION_ID)
                  REFERENCES LOCATION (ID)
);

CREATE TABLE CELL_NETWORK (
       ID INTEGER NOT NULL
     , CELL_CARRIER_ID INTEGER
     , CELL_TYPE_ID INTEGER
     , CELLID CHAR(10)
     , LAC CHAR(6)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CELL_NETWORK_1 FOREIGN KEY (CELL_CARRIER_ID)
                  REFERENCES CELL_CARRIER (ID)
     , CONSTRAINT FK_CELL_NETWORK_2 FOREIGN KEY (CELL_TYPE_ID)
                  REFERENCES CONSTANT (ID)
);

CREATE TABLE ADVERTISED_ITEM (
       ID INTEGER NOT NULL
     , ITEM_ID INTEGER
     , DISPLAY_FROM TIMESTAMP
     , DISPLAY_UNTIL TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ADVERTISED_ITEM_1 FOREIGN KEY (ITEM_ID)
                  REFERENCES ITEM (ID)
);

CREATE TABLE POSTAL_CODE (
       ID INTEGER NOT NULL
     , ZONE_ID INTEGER
     , CODE CHAR(5)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_POSTAL_CODE_1 FOREIGN KEY (ZONE_ID)
                  REFERENCES ZONE (ID)
);

CREATE TABLE ITEM_PICTURE (
       ID INTEGER NOT NULL
     , ITEM_ID INTEGER
     , PICTURE_ID INTEGER
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_PICTURES_1 FOREIGN KEY (ITEM_ID)
                  REFERENCES ITEM (ID)
     , CONSTRAINT FK_ITEM_PICTURES_2 FOREIGN KEY (PICTURE_ID)
                  REFERENCES PICTURE (ID)
);

CREATE TABLE ITEM_COMMENT_PICTURE (
       ID INTEGER NOT NULL
     , ITEM_COMMENT_ID INTEGER
     , PICTURE_ID INTEGER
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_COMMENT_RATING_PICTURE_1 FOREIGN KEY (ITEM_COMMENT_ID)
                  REFERENCES ITEM_COMMENT (ID)
     , CONSTRAINT FK_ITEM_COMMENT_RATING_PICTURE_2 FOREIGN KEY (PICTURE_ID)
                  REFERENCES PICTURE (ID)
);

CREATE TABLE USER_SESSION_HISTORIC (
       ID INTEGER NOT NULL
     , USER_SESSION_ID INTEGER
     , ACTION_ID INTEGER
     , IP_ADDRESS CHAR(15)
     , ON_DATE TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_USER_SESSION_HISTORIC_1 FOREIGN KEY (USER_SESSION_ID)
                  REFERENCES USER_SESSION (ID)
     , CONSTRAINT FK_USER_SESSION_HISTORIC_2 FOREIGN KEY (ACTION_ID)
                  REFERENCES CONSTANT (ID)
);

CREATE TABLE USER_CONFIGURATION_LOCATION (
       ID INTEGER NOT NULL
     , USER_CONFIGURATION_ID INTEGER
     , TYPE_ID INTEGER
     , LOCATION_ID INTEGER
     , SESSION_ID CHAR(32)
     , IP_ADDRESS CHAR(16)
     , ON_DATE TIMESTAMP
     , NAME CHAR(30)
     , IS_CURRENT_LOCATION BIT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_USER_CONFIGURATION_LOCATION_1 FOREIGN KEY (USER_CONFIGURATION_ID)
                  REFERENCES USER_CONFIGURATION (ID)
     , CONSTRAINT FK_USER_CONFIGURATION_LOCATION_2 FOREIGN KEY (LOCATION_ID)
                  REFERENCES LOCATION (ID)
     , CONSTRAINT FK_USER_CONFIGURATION_LOCATION_3 FOREIGN KEY (TYPE_ID)
                  REFERENCES CONSTANT (ID)
);

CREATE TABLE ITEM_COMMENT_HISTORIC (
       ID CHAR(10) NOT NULL
     , ITEM_COMMENT_ID INTEGER
     , ACTION_ID INTEGER
     , ON_DATE TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_ITEM_COMMENT_HISTORIC_1 FOREIGN KEY (ITEM_COMMENT_ID)
                  REFERENCES ITEM_COMMENT (ID)
     , CONSTRAINT FK_ITEM_COMMENT_HISTORIC_2 FOREIGN KEY (ACTION_ID)
                  REFERENCES CONSTANT (ID)
);

CREATE TABLE HOTSPOT_STATISTIC (
       ID INTEGER NOT NULL
     , USER_ID INTEGER
     , LOCATION_ID INTEGER
     , CLIENT_BROWSER_STATISTIC_ID INTEGER
     , SESSION_ID CHAR(32)
     , ON_PATH CHAR(50)
     , ON_PAGE CHAR(50)
     , ON_DATE TIMESTAMP
     , X_POSITION SMALLINT
     , Y_POSITION SMALLINT
     , BROWSER_HEIGHT SMALLINT
     , BROWSER_WIDTH SMALLINT
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_HOTSPOT_STATISTIC_1 FOREIGN KEY (USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_HOTSPOT_STATISTIC_2 FOREIGN KEY (LOCATION_ID)
                  REFERENCES LOCATION (ID)
     , CONSTRAINT FK_HOTSPOT_STATISTIC_3 FOREIGN KEY (CLIENT_BROWSER_STATISTIC_ID)
                  REFERENCES CLIENT_BROWSER_STATISTIC (ID)
);

CREATE TABLE CONSTANT_NAME (
       ID INTEGER NOT NULL
     , CONSTANT_ID INTEGER
     , LANGUAGE_ID INTEGER
     , NAME CHAR(30)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CONSTANT_NAME_1 FOREIGN KEY (CONSTANT_ID)
                  REFERENCES CONSTANT (ID)
     , CONSTRAINT FK_CONSTANT_NAME_2 FOREIGN KEY (LANGUAGE_ID)
                  REFERENCES LANGUAGE (ID)
);

CREATE TABLE ITEM_HISTORIC (
       ID INTEGER NOT NULL
     , ITEM_ID INTEGER
     , ACTION_ID INTEGER
     , MODIFIED_BY_USER_ID INTEGER
     , ON_DATE TIMESTAMP
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_HISTORIC_1 FOREIGN KEY (MODIFIED_BY_USER_ID)
                  REFERENCES USER_ (ID)
     , CONSTRAINT FK_ITEM_HISTORIC_2 FOREIGN KEY (ITEM_ID)
                  REFERENCES ITEM (ID)
     , CONSTRAINT FK_ITEM_HISTORIC_3 FOREIGN KEY (ACTION_ID)
                  REFERENCES CONSTANT (ID)
);